name: tests
on: [pull_request, workflow_dispatch]
jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make python3-pyflakes python3-pep8

      - name: Run unit tests
        run: make check

  tasks:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # need this to get origin/master for git diff
          fetch-depth: 0

      - name: Rebase to current master
        run: git rebase origin/master

      - name: Prepare
        run: |
          # override GitHub's bind mount from host, we don't want anything from there and it interferes with ssh
          export HOME=$(getent passwd $(id -u) | cut -f6 -d:)
          echo '${{ secrets.COCKPITUOUS_TOKEN }}' > ~/.config/github-token

          # TODO pip intsall pika
          sudo pip3 install pika

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 45

      - name: Build and test tasks container if it changed
        run: |
          changes=$(git diff --name-only origin/master..HEAD -- tasks/)
          if [ -n "${changes}" ]; then
              # Run podman as root, as podman is missing slirp4netns by default, and does not have overlayfs by default
              sudo make tasks-container
              # This does not do much yet, just iterate to the AMQP queue 30 times and exit
              # TODO: Inject a workload that does not need /dev/kvm
              sudo tasks/run-local.sh

              # clone bots
              # TODO: figure out how to split this into different steps if possible
              git clone https://github.com/cockpit-project/bots
              git -C ./bots fetch origin pull/1567/head
              git -C ./bots checkout FETCH_HEAD

              # trigger a test
              PRN=$(echo "$GITHUB_REF" | cut -f3 -d '/')
              bots/tests-trigger --repo cockpit-project/cockpituous $PRN host
              # TODO replace this also probably won't work
              sudo ln -s $(find /tmp -maxdepth 1 -name "cockpituous-secrets.*" | head -n 1) /run/secrets
              # some debugging output
              bots/tests-scan -p "$PRN" -dv
              # publish
              bots/tests-scan -p "$PRN" --amqp "localhost:5671"

              # TODO wait until status is green on cockpituous I guess
              sleep 30
          fi
